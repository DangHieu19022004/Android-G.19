// Generated by view binder compiler. Do not edit!
package com.example.appdocsach.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appdocsach.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final ImageView broom;

  @NonNull
  public final ImageView change;

  @NonNull
  public final TextView changePass;

  @NonNull
  public final TextView clear;

  @NonNull
  public final TextView delete;

  @NonNull
  public final TextView evaluate;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final TextView logOut;

  @NonNull
  public final ImageView logout;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final ImageView night;

  @NonNull
  public final TextView nightMode;

  @NonNull
  public final ImageView share;

  @NonNull
  public final TextView shareFriend;

  @NonNull
  public final ImageView start;

  @NonNull
  public final ImageView switchbtn;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final ImageView trash;

  private ActivitySettingBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull ImageView broom,
      @NonNull ImageView change, @NonNull TextView changePass, @NonNull TextView clear,
      @NonNull TextView delete, @NonNull TextView evaluate, @NonNull ImageView imageView,
      @NonNull LinearLayout linearLayout4, @NonNull TextView logOut, @NonNull ImageView logout,
      @NonNull ConstraintLayout main, @NonNull ImageView night, @NonNull TextView nightMode,
      @NonNull ImageView share, @NonNull TextView shareFriend, @NonNull ImageView start,
      @NonNull ImageView switchbtn, @NonNull TextView textView4, @NonNull ImageView trash) {
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.broom = broom;
    this.change = change;
    this.changePass = changePass;
    this.clear = clear;
    this.delete = delete;
    this.evaluate = evaluate;
    this.imageView = imageView;
    this.linearLayout4 = linearLayout4;
    this.logOut = logOut;
    this.logout = logout;
    this.main = main;
    this.night = night;
    this.nightMode = nightMode;
    this.share = share;
    this.shareFriend = shareFriend;
    this.start = start;
    this.switchbtn = switchbtn;
    this.textView4 = textView4;
    this.trash = trash;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.broom;
      ImageView broom = ViewBindings.findChildViewById(rootView, id);
      if (broom == null) {
        break missingId;
      }

      id = R.id.change;
      ImageView change = ViewBindings.findChildViewById(rootView, id);
      if (change == null) {
        break missingId;
      }

      id = R.id.change_pass;
      TextView changePass = ViewBindings.findChildViewById(rootView, id);
      if (changePass == null) {
        break missingId;
      }

      id = R.id.clear;
      TextView clear = ViewBindings.findChildViewById(rootView, id);
      if (clear == null) {
        break missingId;
      }

      id = R.id.delete;
      TextView delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.evaluate;
      TextView evaluate = ViewBindings.findChildViewById(rootView, id);
      if (evaluate == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.log_out;
      TextView logOut = ViewBindings.findChildViewById(rootView, id);
      if (logOut == null) {
        break missingId;
      }

      id = R.id.logout;
      ImageView logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.night;
      ImageView night = ViewBindings.findChildViewById(rootView, id);
      if (night == null) {
        break missingId;
      }

      id = R.id.night_mode;
      TextView nightMode = ViewBindings.findChildViewById(rootView, id);
      if (nightMode == null) {
        break missingId;
      }

      id = R.id.share;
      ImageView share = ViewBindings.findChildViewById(rootView, id);
      if (share == null) {
        break missingId;
      }

      id = R.id.share_friend;
      TextView shareFriend = ViewBindings.findChildViewById(rootView, id);
      if (shareFriend == null) {
        break missingId;
      }

      id = R.id.start;
      ImageView start = ViewBindings.findChildViewById(rootView, id);
      if (start == null) {
        break missingId;
      }

      id = R.id.switchbtn;
      ImageView switchbtn = ViewBindings.findChildViewById(rootView, id);
      if (switchbtn == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.trash;
      ImageView trash = ViewBindings.findChildViewById(rootView, id);
      if (trash == null) {
        break missingId;
      }

      return new ActivitySettingBinding((ConstraintLayout) rootView, bottomNavigationView, broom,
          change, changePass, clear, delete, evaluate, imageView, linearLayout4, logOut, logout,
          main, night, nightMode, share, shareFriend, start, switchbtn, textView4, trash);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
